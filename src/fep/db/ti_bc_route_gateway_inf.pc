#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <stdlib.h>
#include <sqlda.h>
#include <sqlcpr.h>
#include <oraca.h>
#include "./inc/glbdb.h"
#include "./inc/ti_bc_route_gateway_inf.h"

EXEC ORACLE OPTION (ORACA=YES);

EXEC SQL BEGIN DECLARE SECTION;
ti_bc_route_gateway_inf_def tiBcRouteGatewayInf ;
EXEC SQL END DECLARE SECTION;

#define MIN(a,b) a>b?b:a

/*
 *  Function:  tiBcRouteGatewayInfOpr
 *
 *
 *  Parameters:
 * 
 *      oprType - 操作类型， 输入， 取值
 *                SELECT1     
 *                UPDATE1     
 *      p_sqlCode     - 返回值， 输出
 *      p_tiBcTrans   - 查找条件，输入
 *                      查找结果，输出
 *
 *  Return Value:
 *
 *      SUCCESS - success
 *      FAILURE - failure
 */

int tiBcRouteGatewayInfOpr(int oprType, ti_bc_route_gateway_inf_def *p_tiBcRouteGatewayInf, int *p_sqlCode)
{
    /*EXEC SQL WHENEVER SQLERROR DO sql_error("Oracle error:");*/
    EXEC SQL WHENEVER SQLERROR continue; /*DO sql_error("Oracle error:");*/

    EXEC SQL BEGIN DECLARE SECTION;
    char rcv_ins_id_cd     [  8 + 1 ];
    char iss_ins_id_cd     [  8 + 1 ];
    EXEC SQL END DECLARE SECTION;

    MEMSET_0(iss_ins_id_cd)
    MEMSET_0(rcv_ins_id_cd)

    int i;
    switch ( oprType )
    {
    
    case GLB_DB_SELECT1:
        i = MIN(sizeof(iss_ins_id_cd),sizeof(p_tiBcRouteGatewayInf->iss_ins_id_cd));
        memcpy(iss_ins_id_cd, p_tiBcRouteGatewayInf->iss_ins_id_cd, i);
        iss_ins_id_cd[i-1]=0;
        rtrim(iss_ins_id_cd);
        ADJUST_STRING(iss_ins_id_cd);

        i = MIN(sizeof(rcv_ins_id_cd),sizeof(p_tiBcRouteGatewayInf->rcv_ins_id_cd));
        memcpy(rcv_ins_id_cd, p_tiBcRouteGatewayInf->rcv_ins_id_cd, i);
        rcv_ins_id_cd[i-1]=0;
        ADJUST_STRING(rcv_ins_id_cd);

        EXEC SQL SELECT 
        rcv_ins_id_cd     ,
        iss_ins_id_cd     ,
        gate_id     
        INTO :tiBcRouteGatewayInf
        FROM (
             SELECT 
        	rcv_ins_id_cd     ,
        	iss_ins_id_cd     ,
        	gate_id     
             FROM ti_bc_route_gateway_inf
             WHERE 
             rtrim(rcv_ins_id_cd)=:rcv_ins_id_cd 
             AND rtrim(iss_ins_id_cd)=:iss_ins_id_cd
             ORDER BY rcv_ins_id_cd desc, iss_ins_id_cd desc
             )                     
        WHERE rownum<=1
        ORDER BY ROWNUM ASC
        ;

        /* search result */
        *p_sqlCode = sqlca.sqlcode;
        if ( sqlca.sqlcode == 0 )
        {
            memcpy(p_tiBcRouteGatewayInf, &tiBcRouteGatewayInf, sizeof(ti_bc_route_gateway_inf_def));
        } else if ( sqlca.sqlcode == 1403 )
        {
            *p_sqlCode = SQL_ERD_NONE_RECORD;
            glb_Log(0,0, "<FILE:%s,LINE:%d><TI_BC_ROUTE_GATEWAY_INF.pc.pc:tiBcRouteGatewayInfOpr:SELECT1>Search Record (rcv_ins_id_cd:%s,iss_ins_id_cd:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", __FILE__,__LINE__,rcv_ins_id_cd,iss_ins_id_cd, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        } else
        {
            glb_Log(0,0,"<FILE:%s,LINE:%d><TI_BC_ROUTE_GATEWAY_INF.pc.pc:tiBcRouteGatewayInfOpr:SELECT1>Search Record (rcv_ins_id_cd:%s,iss_ins_id_cd:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", __FILE__,__LINE__,rcv_ins_id_cd,iss_ins_id_cd, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        }
        EXEC SQL COMMIT WORK ;
        break;

    default:
        *p_sqlCode = -1;
        return -1;
    }

    return 0;
}


