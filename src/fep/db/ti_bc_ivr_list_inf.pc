#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <stdlib.h>
#include <sqlda.h>
#include <sqlcpr.h>
#include <oraca.h>
#include "./inc/glbdb.h"
#include "./inc/ti_bc_ivr_list_inf.h"

EXEC ORACLE OPTION (ORACA=YES);

EXEC SQL BEGIN DECLARE SECTION;
ti_bc_ivr_list_inf_def tiBcIvrListInf ;
EXEC SQL END DECLARE SECTION;


/*
 *  Function:  tiBcIvrListInfOpr
 *
 *
 *  Parameters:
 * 
 *      oprType - 操作类型， 输入， 取值
 *                SELECT1     
 *                INSERT1     
 *      p_sqlCode        - 返回值， 输出
 *      p_tiBcIvrListInf   - 查找条件，输入
 *                         查找结果，输出
 *
 *  Return Value:
 *
 *      SUCCESS - success
 *      FAILURE - failure
 */

int tiBcIvrListInfOpr(int oprType, ti_bc_ivr_list_inf_def *p_tiBcIvrListInf, int *p_sqlCode)
{
    EXEC SQL WHENEVER SQLERROR continue; /*DO sql_error("Oracle error:");*/

    EXEC SQL BEGIN DECLARE SECTION;
    char  packkeyid       [100 + 1] ;  
    char  foldername      [30 + 1] ;
    EXEC SQL END DECLARE SECTION;

    char buff[256];

    MEMSET_0(packkeyid);
    MEMSET_0(foldername);

    char caTxnMsg[4096];
    switch ( oprType )
    {
    
    case GLB_DB_SELECT1:
        
        strcpy_safe(packkeyid, p_tiBcIvrListInf->packkeyid, sizeof(packkeyid)-1);
        rtrim_null(packkeyid,' ');
        
        EXEC SQL SELECT 
        	packkeyid,       
        	foldername,
        	createdate  
        INTO 
           :tiBcIvrListInf.packkeyid,   
           :tiBcIvrListInf.foldername,
           :tiBcIvrListInf.createdate
        FROM ti_bc_ivr_list_inf
        WHERE packkeyid=:packkeyid;

        /* search result */
        *p_sqlCode = sqlca.sqlcode;
        if ( sqlca.sqlcode == 0 )
        {
            memcpy(p_tiBcIvrListInf, &tiBcIvrListInf, sizeof(ti_bc_ivr_list_inf_def));
        } else if ( sqlca.sqlcode == 1403 )
        {
            *p_sqlCode = SQL_ERD_NONE_RECORD;
            glb_Log(0,0, "<FILE:%s,LINE:%d><TL_BC_IVR_LIST_INF.pc:tiBcIvrListInfOpr:SELECT1>Search Record (packkeyid:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n",__FILE__,__LINE__, packkeyid, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        } else
        {
            glb_Log(0,0, "<FILE:%s,LINE:%d><TL_BC_IVR_LIST_INF.pc:tiBcIvrListInfOpr:SELECT1>Search Record (packkeyid:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n",__FILE__,__LINE__, packkeyid, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        }
        EXEC SQL COMMIT WORK ;
        break;

    case GLB_DB_INSERT1:    
        /*copy buff*/
        memcpy(&tiBcIvrListInf, p_tiBcIvrListInf, sizeof(ti_bc_ivr_list_inf_def));

        /* add other field*/
        glb_GetLocalTimeString(tiBcIvrListInf.createdate, sizeof(tiBcIvrListInf.createdate),"%Y%m%d");
        ADJUST_STRING(tiBcIvrListInf.packkeyid         )
        ADJUST_STRING(tiBcIvrListInf.foldername        )

        EXEC SQL insert into ti_bc_ivr_list_inf(packkeyid,foldername,createdate) values
        (
        	:tiBcIvrListInf.packkeyid         ,
        	:tiBcIvrListInf.foldername        ,
        	:tiBcIvrListInf.createdate
        )
        ;

        /* insert result */
        *p_sqlCode = sqlca.sqlcode;
        if ( sqlca.sqlcode == 0 )
        {
        } else if ( memcmp(sqlca.sqlerrm.sqlerrmc, "ORA-00001", 9 ) == 0 )
        {
            *p_sqlCode = SQL_ERD_UNIKEY;
            glb_Log(0,0, "<TL_BC_IVR_LIST_INF.pc:tiBcIvrListInfOpr:INSERT1>Insert Record is exist.sqlcode:%d,sqlca.sqlerrm.sqlerrmc:%s",sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        } else
        {
            glb_Log(0,0, "<TL_BC_IVR_LIST_INF.pc:tiBcIvrListInfOpr:INSERT1>Insert Record is exist.sqlcode:%d,sqlca.sqlerrm.sqlerrmc:%s",sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc);
        }
        EXEC SQL COMMIT WORK ;
        break;

    default:
        *p_sqlCode = -1;
        return -1;
    }

    return 0;
}
