#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <stdlib.h>
#include <sqlda.h>
#include <sqlcpr.h>
#include <oraca.h>
#include "./inc/glbdb.h"
#include "./inc/ti_bc_mchnt_det.h"

EXEC ORACLE OPTION (ORACA=YES);

EXEC SQL BEGIN DECLARE SECTION;
  ti_bc_mchnt_det_def tiBcMchntDet ;
EXEC SQL END DECLARE SECTION;


/*
 *  Function:  tiBcMchntDetOpr
 *
 *
 *  Parameters:
 * 
 *      oprType - 操作类型， 输入， 取值
 *                SELECT1     
 *                UPDATE1     
 *      p_sqlCode      - 返回值， 输出
 *      p_tiBcMchntDet - 查找条件，输入
 *                       查找结果，输出
 *
 *  Return Value:
 *
 *      SUCCESS - success
 *      FAILURE - failure
 */

int tiBcMchntDetOpr(int oprType, ti_bc_mchnt_det_def *p_tiBcMchntDet, int *p_sqlCode)
{
	/*EXEC SQL WHENEVER SQLERROR DO sql_error("Oracle error:");*/
	EXEC SQL WHENEVER SQLERROR continue; /*DO sql_error("Oracle error:");*/
	
	EXEC SQL BEGIN DECLARE SECTION;
       char  trans_chnl      [30+ 1] ; /* 接入渠道*/
	   char  msg_tp          [4 + 1] ;  
       char  proc_cd         [6 + 1] ;  
       char  pos_cond_cd [4 + 1] ;  
       char  mchnt_tp        [4 + 1] ;  
	EXEC SQL END DECLARE SECTION;
  
  char caTxnMsg[4096];
	switch (oprType) {
		
		case GLB_DB_SELECT1:
			
            memcpy(trans_chnl, p_tiBcMchntDet->trans_chnl,30);
			trans_chnl[30]=0;
            rtrim(trans_chnl);

            memcpy(msg_tp, p_tiBcMchntDet->msg_tp,4);
			msg_tp[4]=0;
            rtrim(msg_tp);

            memcpy(proc_cd, p_tiBcMchntDet->proc_cd,6);
			proc_cd[6]=0;
            rtrim(proc_cd);

            memcpy(pos_cond_cd, p_tiBcMchntDet->pos_cond_cd,4);
			pos_cond_cd[4]=0;
            rtrim(pos_cond_cd);

            memcpy(mchnt_tp, p_tiBcMchntDet->mchnt_tp,4);
			mchnt_tp[4]=0;
            rtrim(mchnt_tp);

           EXEC SQL SELECT * INTO 
              :tiBcMchntDet.trans_chnl      ,
              :tiBcMchntDet.msg_tp          ,
              :tiBcMchntDet.proc_cd         ,
              :tiBcMchntDet.pos_cond_cd     ,
              :tiBcMchntDet.mchnt_tp        ,
              :tiBcMchntDet.mchnt_cd          
           	FROM 
           (  SELECT 
			        trans_chnl      ,
              msg_tp          ,
              proc_cd         ,
              pos_cond_cd     ,
              mchnt_tp        ,
              mchnt_cd        
             FROM ti_bc_trans_det
             WHERE ( rtrim(msg_tp)=:msg_tp OR rtrim(msg_tp)='*' )
               AND ( rtrim(proc_cd)=:proc_cd OR rtrim(proc_cd)='*' )
               AND ( rtrim(pos_cond_cd)=:pos_cond_cd OR rtrim(pos_cond_cd)='*' )
               AND ( rtrim(mchnt_tp)=:mchnt_tp OR rtrim(mchnt_tp)='*' )
               AND ( rtrim(trans_chnl)=:trans_chnl OR rtrim(trans_chnl)='*' )
             ORDER BY  
               trans_chnl  desc,
               msg_tp      desc,
               proc_cd     desc,
               pos_cond_cd desc,
               mchnt_tp    desc
         )
       WHERE rownum<=1
       ;

     /* search result */
     *p_sqlCode = sqlca.sqlcode;
     if ( sqlca.sqlcode == 0 )
     {
     	  memcpy(p_tiBcMchntDet, &tiBcMchntDet, sizeof(ti_bc_mchnt_det_def));
     } 
     else if ( sqlca.sqlcode == 1403 )
     { 
        *p_sqlCode = SQL_ERD_NONE_RECORD;
      	  glb_Log(0,0,"<TI_BC_MCHNT_DET.pc.pc:tiBcTransDetOpr:SELECT1>Search Record (trans_chnl:%s,msg_tp:%s,proc_cd:%s,pos_cond_cd:%s,mchnt_tp:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", trans_chnl,msg_tp,proc_cd,pos_cond_cd,mchnt_tp, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
     }
     else
     {
        glb_Log(0,0,"<TI_BC_MCHNT_DET.pc.pc:tiBcTransDetOpr:SELECT1>Search Record (trans_chnl:%s,msg_tp:%s,proc_cd:%s,pos_cond_cd:%s,mchnt_tp:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", trans_chnl,msg_tp,proc_cd,pos_cond_cd,mchnt_tp, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
      }
      EXEC SQL COMMIT WORK ;
			break;
			
		default:
        *p_sqlCode = -1;
    	return -1;
    }
    
    return 0;
}

