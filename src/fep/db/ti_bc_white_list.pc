#include <stdio.h>
#include <string.h>
#include <sqlca.h>
#include <stdlib.h>
#include <sqlda.h>
#include <sqlcpr.h>
#include <oraca.h>
#include "./inc/glbdb.h"
#include "./inc/ti_bc_white_list.h"

EXEC ORACLE OPTION (ORACA=YES);

EXEC SQL BEGIN DECLARE SECTION;
ti_bc_white_list_def tiBcWhiteListInf ;
EXEC SQL END DECLARE SECTION;

#define MIN(a,b) a>b?b:a

/*
 *  Function:  tiBcWhiteListInfOpr
 *
 *
 *  Parameters:
 * 
 *      oprType - 操作类型， 输入， 取值
 *                SELECT1     
 *                UPDATE1     
 *      p_sqlCode     - 返回值， 输出
 *      p_tiBcTrans   - 查找条件，输入
 *                      查找结果，输出
 *
 *  Return Value:
 *
 *      SUCCESS - success
 *      FAILURE - failure
 */

int tiBcWhiteListOpr(int oprType, ti_bc_white_list_def *p_tiBcWhiteListInf, int *p_sqlCode)
{
    /*EXEC SQL WHENEVER SQLERROR DO sql_error("Oracle error:");*/
    EXEC SQL WHENEVER SQLERROR continue; /*DO sql_error("Oracle error:");*/

    EXEC SQL BEGIN DECLARE SECTION;
    char card_idno_inf     [  32 + 2 ];
    char mchnt_cd     [  8 + 1 ];
    EXEC SQL END DECLARE SECTION;

    MEMSET_0(mchnt_cd)
    MEMSET_0(card_idno_inf)

    int i;
    switch ( oprType )
    {
    
    case GLB_DB_SELECT1:
        memcpy_safe(mchnt_cd, p_tiBcWhiteListInf->mchnt_cd, sizeof(mchnt_cd)-1);
        rtrim_null(mchnt_cd,' ');
        
        memcpy_safe(card_idno_inf, p_tiBcWhiteListInf->card_idno_inf, sizeof(card_idno_inf)-1);
        rtrim_null(card_idno_inf,' ');

        EXEC SQL SELECT 
        card_idno_inf,
        mchnt_cd           
        INTO :tiBcWhiteListInf
        FROM (
             SELECT 
        	card_idno_inf,
        	mchnt_cd           
             FROM ti_bc_white_list
             WHERE 
             :card_idno_inf like rtrim(card_idno_inf)||'%'
             AND ( rtrim(mchnt_cd)=:mchnt_cd  OR rtrim(mchnt_cd)='*' )
             ORDER BY mchnt_cd desc, length(card_idno_inf) desc
             )                     
        WHERE rownum<=1
        ORDER BY ROWNUM ASC
        ;

        /* search result */
        *p_sqlCode = sqlca.sqlcode;
        if ( sqlca.sqlcode == 0 )
        {
            memcpy(p_tiBcWhiteListInf, &tiBcWhiteListInf, sizeof(ti_bc_white_list_def));
        } else if ( sqlca.sqlcode == 1403 )
        {
            *p_sqlCode = SQL_ERD_NONE_RECORD;
            glb_Log(0,0, "<TI_BC_WHITE_LIST.pc.pc:tiBcWhiteListInfOpr:SELECT1>Search Record (card_idno_inf:%s,mchnt_cd:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", card_idno_inf,mchnt_cd, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        } else
        {
            glb_Log(0,0, "<TI_BC_WHITE_LIST.pc.pc:tiBcWhiteListInfOpr:SELECT1>Search Record (card_idno_inf:%s,mchnt_cd:%s) Error.\n[sqlCode:%d]errmsg:\n----------\n%s\n", card_idno_inf,mchnt_cd, sqlca.sqlcode, sqlca.sqlerrm.sqlerrmc );
        }
        EXEC SQL COMMIT WORK ;
        break;

    default:
        *p_sqlCode = -1;
        return -1;
    }

    return 0;
}


